function handleKmz(a){JSZip.loadAsync(a).then(function(a){Object.keys(a.files).forEach(function(e){a.files[e].async("string").then(function(a){handleKmlContent(a),refresh()})})})}function handleKmlContent(a){var e=(new DOMParser).parseFromString(a,"text/xml"),o=kml(e);o.features.length<=0?alert("Invalid kml file"):(parsedJson.push(o),geoJson=!1)}function readFile(a){if(".kmz"===a.name.substr(-4).toLowerCase())return void handleKmz(a);var e=new FileReader;e.onload=function(a){var e=a.target.result,o=!1;try{o=JSON.parse(e)}catch(a){}o!==!1?(parsedJson.push(o),geoJson=!1):handleKmlContent(e),refresh()},e.onerror=function(a){alert("File could not be read! Code "+a.target.error.code)},e.readAsText(a)}function initMapLayerHandler(){parsedJson&&parsedJson.length>0&&$("#maplayer-data").val(JSON.stringify(parsedJson)),$("#maplayer-form").change(function(){var a=$("#maplayer-files").get(0).files;a.length>0&&(parsedJson=[]);for(var e=0;e<a.length;e++)readFile(a[e])}),$("#maplayer-lng, #maplayer-lat, #maplayer-zoom, #maplayer-color").on("change",function(){refresh()}),mapboxgl.accessToken=window.mapboxToken;var a=$("#map").get(0);map=new mapboxgl.Map({container:a,style:"mapbox://styles/mapbox/streets-v11"}),map.addControl(new mapboxgl.FullscreenControl),map.addControl(new mapboxgl.NavigationControl,"bottom-right"),map.on("load",function(){refresh()}),map.on("zoom",function(){zoom=Math.round(map.getZoom()),$("#maplayer-zoom").val(zoom)}),map.on("click",function(a){lat=a.lngLat.wrap().lat,lng=a.lngLat.wrap().lng,$("#maplayer-lat").val(lat),$("#maplayer-lng").val(lng)})}function refresh(){if(map!==!1){var a=parseFloat($("#maplayer-lng").val()),e=parseFloat($("#maplayer-lat").val()),o=parseFloat($("#maplayer-zoom").val()),n=$("#maplayer-color").val()||"blue";if(parsedJson&&parsedJson.length>0){geoJson=parsedJson;var r=map.getStyle().layers;for(var l in r)parsedJson===!1||0!==r[l].id.indexOf("regionlayer_line")||map.removeLayer(r[l].id);$("#maplayer-data").val(JSON.stringify(geoJson));for(var l=0;l<geoJson.length;l++)map.addLayer({id:"regionlayer_line"+Math.round(1e4*Math.random()),type:"line",source:{type:"geojson",data:geoJson[l]},paint:{"line-color":n,"line-width":3,"line-opacity":.5}})}isNaN(a)&&(a=lng),isNaN(e)&&(e=lat),isNaN(o)&&(o=zoom),a===lng&&e===lat&&o===zoom||(lng=a,lat=e,zoom=o,map.jumpTo({center:[lng,lat],zoom:zoom}))}}var map=!1,geoJson=!1,lng=!1,lat=!1,zoom=!1,parsedJson=JSON.parse(GEOJSON);